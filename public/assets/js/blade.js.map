{"version":3,"sources":["blade.js"],"names":["createCORSRequest","method","url","EncodeQueryData","query_data","xhr","XMLHttpRequest","open","XDomainRequest","Error","onreadystatechange","readyState","responseText","status","data","JSON","parse","forEach","command","console","log","swb_fn","apply","this","e","call","document","getElementsByTagName","style","visibility","send","err","ret","d","push","encodeURIComponent","join","run_command","commands","Array","prototype","slice","serialize","obj","prefix","depth","window","Node","targetToString","str","p","hasOwnProperty","k","v","modules","base_url","swb","q","arguments","init","auth","api_key","insert_script","script_arguments","module","script_url","head","script","createElement","type","src","callback","script_callback","eval","onload","appendChild","apply_function","params","Date","getTime","img","Image","register","name"],"mappings":"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","file":"blade.js","sourcesContent":["(function() \n{\n    var modules = {};\n    var query_data = {};\n    var base_url = \"https://luke.switchblade.io/\";\n//    console.log = function() {}\n    \n    function createCORSRequest(method, url) \n    {\n        url = url+\"?\"+EncodeQueryData(query_data);\n        var xhr = new XMLHttpRequest();\n        if (\"withCredentials\" in xhr) \n        {\n            // Check if the XMLHttpRequest object has a \"withCredentials\" property.\n            // \"withCredentials\" only exists on XMLHTTPRequest2 objects.\n            xhr.open(method, url, true);\n        } \n        else if (typeof XDomainRequest != \"undefined\")\n        {\n            // XDomainRequest only exists in IE, and is IE's way of making CORS requests.\n            xhr = new XDomainRequest();\n            xhr.open(method, url);\n        }\n        else \n        {\n            // Otherwise, CORS is not supported by the browser.\n            xhr =  null;\n            throw new Error('CORS not supported');\n        }\n        \n        xhr.onreadystatechange = function() \n        {\n            if (xhr.readyState == 4) \n            { \n                if(xhr.responseText && xhr.status == 200)\n                {\n                    // Apend the JS to the end of the file\n                    var data = JSON.parse(xhr.responseText);\n                    data.forEach(function(command)\n                    {\n                        if(command)\n                        {\n                            // run what we need to get\n\t\t\t    console.log(command.function);\n                            try \n                            {\n                                swb_fn[command.function].apply(this,command.data);\n                            } \n                            catch(e)\n                            {\n                                // try to call instead\n                                try \n                                {\n                                    swb_fn[command.function].call(this,command.data);\n                                }\n                                catch(e)\n                                {\n                                    document.getElementsByTagName('html')[0].style.visibility= \"\";\n                                    console.log('BAD FUNCTION: '+command.function);\n                                    console.log(e);\n                                }\n                            }\n                        }\n                    });\n                }\n                document.getElementsByTagName('html')[0].style.visibility= \"\";\n            }\n        }\n        \n        try\n        {\n            xhr.send();\n        }\n        catch(err)\n        {\n            console.log(err);\n            document.getElementsByTagName('html')[0].style.visibility= \"\";\n        }\n    }\n        \n    function EncodeQueryData(data)\n    {\n        var ret = [];\n        for (var d in data)\n        {\n            ret.push(encodeURIComponent(d) + \"=\" + encodeURIComponent(data[d]));\n        }\n       return ret.join(\"&\");\n    }\n    \n    // Watch for the events inside the array and run them\n    swb.q.push = function() \n    {    \n        run_command(arguments[0]);\n    };\n    \n    function run_command(commands) \n    {\n        commands = Array.prototype.slice.call(commands);\n        swb_fn[commands[0]].apply(this, commands.slice(1));\n    }\n\n    var init = function()\n    {\n        swb.q.forEach(run_command);\n    }\n    \n    var auth = function(api_key)\n    {\n        query_data['api_key'] = api_key;\n\tvar xhr = createCORSRequest('GET', \"https://luke.switchblade.io/api/v1/mods\");\n    }\n    \n    var insert_script = function(script_arguments)\n    {\n        if(!modules[script_arguments.module])\n        {\n            swb('register', script_arguments.module);\n            \n            var script_url = script_arguments.url;\n            // Adding the script tag to the head as suggested before\n            var head = document.getElementsByTagName('head')[0];\n            var script = document.createElement('script');\n            script.type = 'text/javascript';\n            script.src = script_url;\n\n            if(script_arguments.callback)\n            {\n                var script_callback = eval(script_arguments.callback);\n\n                // Then bind the event to the callback function.\n                // There are several events for cross browser compatibility.\n                script.onreadystatechange = script_callback;\n                script.onload = script_callback;\n            }\n            // Fire the loading\n            head.appendChild(script);\n        }\n        else\n        {\n            console.log('Already Loaded');\n        }\n    }\n    \n    var apply_function = function(script_arguments)\n    {\n        console.log(script_arguments);\n\teval(script_arguments.function);\n    }\n    \n     // To quickly send things an optimize the sending we are going to just send an \"img\"\n    // this allows for cross browser and expects no return!\n    var send = function(url, params)\n    {\n        if(params)\n        {\n            params.api_key = query_data['api_key'];\n        }\n        else\n        {\n            params = {\n                api_key: query_data['api_key']\n            };\n        }\n        \n        url = base_url + url + \"?\" + serialize(params) + \"&ct=img&cb=\" + new Date().getTime();\n        var img = new Image();\n        img.src = url;\n    }\n    \n    var register = function(name)\n    {\n        modules[name] = true;\n    }\n    \n    function serialize(obj, prefix, depth) \n    {\n        if (depth >= 5) \n        {\n            return encodeURIComponent(prefix) + \"=[RECURSIVE]\";\n        }\n        depth = depth + 1 || 1;\n\n        try \n        {\n            if (window.Node && obj instanceof window.Node) \n            {\n                return encodeURIComponent(prefix) + \"=\" + encodeURIComponent(targetToString(obj));\n            }\n            var str = [];\n            for (var p in obj) \n            {\n                if (obj.hasOwnProperty(p) && p != null && obj[p] != null) \n                {\n                    var k = prefix ? prefix + \"[\" + p + \"]\" : p, v = obj[p];\n                    str.push(typeof v === \"object\" ? serialize(v, k, depth) : encodeURIComponent(k) + \"=\" + encodeURIComponent(v));\n                }\n            }\n            return str.join(\"&\");\n        }\n        catch (e) \n        {\n            return encodeURIComponent(prefix) + \"=\" + encodeURIComponent(\"\" + e);\n        }\n    }\n    \n    // All Functions Must Be Set Here \n    var swb_fn = \n    {\n        init:init,\n        auth: auth,\n        insert_script: insert_script,\n\tapply_function: apply_function,\n        send: send,\n        register: register\n    };\n    \n    init();\n})(window);"],"sourceRoot":"/source/"}